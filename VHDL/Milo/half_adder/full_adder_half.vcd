$date
  Sat Oct 21 13:44:39 2017
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! a $end
$var reg 1 " b $end
$var reg 1 # cin $end
$var reg 1 $ s $end
$var reg 1 % cout $end
$scope module uut $end
$var reg 1 & a $end
$var reg 1 ' b $end
$var reg 1 ( cin $end
$var reg 1 ) s $end
$var reg 1 * cout $end
$var reg 1 + s1 $end
$scope module half_adder1 $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . s $end
$var reg 1 / c $end
$upscope $end
$scope module half_adder2 $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 s $end
$var reg 1 3 c $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
U#
U$
0%
0&
0'
U(
U)
0*
0+
0,
0-
0.
U/
00
U1
U2
03
#1000000
1!
U%
1&
U*
1+
1,
1.
U/
10
U3
#2000000
0!
1"
0&
1'
0,
1-
U/
#3000000
1!
0%
1&
0*
0+
1,
0.
U/
00
03
#4000000
0!
0"
X#
X$
0&
0'
X(
X)
0,
0-
X/
X1
X2
#5000000
1!
X%
1&
X*
1+
1,
1.
X/
10
X3
#6000000
1"
1#
1$
0%
1'
1(
1)
0*
0+
1-
0.
1/
00
11
12
03
#7000000
