#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{listings,xcolor,courier,bookmark}
\usepackage{listingsutf8}
\definecolor{darkblue}{named}{blue}
\definecolor{darkred}{named}{red}
\definecolor{grau}{named}{gray}
\let\Righttorque\relax
\lstset{
captionpos=b,
commentstyle=\color[rgb]{0.133,0.545,0.133},
keywordstyle=\color{darkblue},
stringstyle=\color{darkred},
extendedchars=true,
basicstyle=\small\ttfamily,
showstringspaces=false,
tabsize=2,
numbers=left,
numberstyle=\tiny,
breakautoindent  = true,
breakindent      = 2em,
breaklines       = true,
postbreak        = ,
prebreak         = \raisebox{-.8ex}[0ex][0ex]{\Righttorque},
showspaces=false, 
showtabs=false, 
showstringspaces=false,
language=VHDL,
frame=single,
morecomment=[s]{--}
}


\renewcommand*{\lstlistingname}{Codice Componente}


\usepackage{fancyhdr}
\pagestyle{fancy}

\fancyhead{} 
\fancyfoot{} 

\fancyhead[RO,LE]{\bfseries \leftmark}
\fancyfoot[LE,RO]{\thepage}
\fancyfoot[LO,CE]{Tesina in ASE: Architetture dei Sistemi di Elaborazione}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}

\date{}
\cfoot{}
\end_preamble
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2.5cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Soluzione
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Descrivere la soluzione relizzata per mezzo di schematici e riportare il
 codice dei soli componenti significativi.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Schematici
\end_layout

\begin_layout Subsection
Codice
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Nell'eventialità in cui alcuni componenti sia stati utilizzati in altri
 esercizi inserire solo un riferimento (es.
 Multiplexer Generico - traccia n° 1)
\end_layout

\begin_layout Plain Layout
Segue un esempio di inclusione di codice
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Bit String Comparator
\end_layout

\begin_layout Standard
Il componente Top Module è ottenuto con costrutto 
\emph on
Generate
\emph default
 e le connessioni sono fatte sfruttando tre array monodimensionali (aGT,
 aLT, aEQ).
\end_layout

\begin_layout Standard
I valori MSB di questi array sono posti a (0,0,1) rispettivamente per garantire
 che sui bit più significativi della stringa in ingresso sia fatta una comparazi
one assoluta, e non relativa.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=VHDL,caption={Definizione del componente Bit
 String Comparator Generic}] 
\end_layout

\begin_layout Plain Layout

library IEEE; use IEEE.STD_LOGIC_1164.ALL;
\end_layout

\begin_layout Plain Layout

entity cathode_manager is     Port ( counter : in STD_LOGIC_VECTOR (1 downto
 0); 		     values : in STD_LOGIC_VECTOR (15 downto 0); 		     dots : in
  STD_LOGIC_VECTOR (3 downto 0);            cathodes : out  STD_LOGIC_VECTOR
 (7 downto 0) 		  ); end cathode_manager;
\end_layout

\begin_layout Plain Layout

architecture structural of cathode_manager is
\end_layout

\begin_layout Plain Layout

component muxn_1 is 	generic(address_width : NATURAL := 3); 	port ( 		SEL
 : in STD_LOGIC_VECTOR(address_width-1 downto 0); 		 A : in STD_LOGIC_VECTOR(2**
address_width-1 downto 0); 		 X : out STD_LOGIC 	); end component;
\end_layout

\begin_layout Plain Layout

component cathode_encoder is     Port ( nibble : in  STD_LOGIC_VECTOR (3
 downto 0);            cathodes : out  STD_LOGIC_VECTOR (6 downto 0) 		);
 end component; for all : cathode_encoder use entity WORK.cathode_encoder(behavio
ral);
\end_layout

\begin_layout Plain Layout

signal nibble : STD_LOGIC_VECTOR (3 downto 0) := (others => '0'); alias
 digit0 : STD_LOGIC_VECTOR(3 downto 0) is values(3 downto 0); alias digit1
 : STD_LOGIC_VECTOR(3 downto 0) is values(7 downto 4); alias digit2 : STD_LOGIC_
VECTOR(3 downto 0) is values(11 downto 8); alias digit3 : STD_LOGIC_VECTOR(3
 downto 0) is values(15 downto 12); signal in_mux : STD_LOGIC_VECTOR (15
 downto 0) := (others => '0'); --per ordinare i valori da porre in ingresso
 ai mux 4x1
\end_layout

\begin_layout Plain Layout

begin 
\end_layout

\begin_layout Plain Layout

	mux16_4 : for i in 0 to 3 generate 		in_mux((i*4+3) downto i*4) <= (digit3(i),
 digit2(i), digit1(i), digit0(i)); 		-- i=0 --> in_mux(3 downto 0) 		--
 i=1 --> in_mux(7 downto 4) 		-- i=2 --> in_mux(11 downto 8) 		-- i=3 -->
 in_mux(15 downto 12) 		inst_mux4_1 : muxn_1 			generic map ( address_width
 => 2 ) 			port map ( SEL => counter, 						A => in_mux((i*4+3) downto i*4),
 					   X => nibble(i) 					 ); 	end generate; 
\end_layout

\begin_layout Plain Layout

	inst_encoder : cathode_encoder 		port map ( nibble => nibble, 				   cathodes
 => cathodes (6 downto 0) 				 ); 				  	inst_dots_manager : muxn_1 		generic
 map ( address_width => 2 ) 			port map ( SEL => counter, 					   A => dots,
 					   X => cathodes(7) 					 ); 
\end_layout

\begin_layout Plain Layout

end structural;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
